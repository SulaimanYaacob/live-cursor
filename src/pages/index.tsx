import { type NextPage } from "next";
import Head from "next/head";

import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { Avatar, Button, Center, Stack, Text, TextInput } from "@mantine/core";
import { api, RouterOutputs } from "~/utils/api";
import AppLayout from "./components/AppLayout/AppLayout";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <Avatar
      radius="lg"
      size="sm"
      src={user.profileImageUrl}
      alt="Profile Image"
    />
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, user } = props;
  console.log(props.post.content);

  return (
    <Stack key={post.id} p="lg" sx={{ borderBottom: "1px solid white" }}>
      <div>
        <Text c="violet">{post.content}</Text>
        <Text c="blue">User: {user?.id}</Text>
      </div>
    </Stack>
  );
};

const Home: NextPage = () => {
  const user = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>No data</div>;

  //! Note that this is not a good way to do this. This is just for demo purposes.
  return (
    <AppLayout>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center h="100%">
        <Stack
          justify="space-between"
          w="100%"
          h="100%"
          maw="600px"
          sx={{ border: "1px solid white" }}
        >
          <Stack spacing="0">
            {user.isSignedIn ? (
              <SignOutButton>
                <Button
                  leftIcon={<CreatePostWizard />}
                  color="gray.0"
                  radius="0"
                  variant="outline"
                  sx={{
                    borderRight: "none",
                    borderLeft: "none",
                  }}
                >
                  Sign out
                </Button>
              </SignOutButton>
            ) : (
              <SignInButton>
                <Button
                  color="gray.0"
                  radius="0"
                  variant="outline"
                  sx={{
                    borderRight: "none",
                    borderLeft: "none",
                  }}
                >
                  Sign In
                </Button>
              </SignInButton>
            )}
            <>
              {[...data, ...data]?.map((fullPost) => {
                return <PostView {...fullPost} key={fullPost.post.id} />;
              })}
            </>
          </Stack>
          <Stack>
            <TextInput
              placeholder="What's on your mind?"
              radius={0}
              rightSection={
                <Button radius={0} mr="xl" compact>
                  Enter
                </Button>
              }
            />
          </Stack>
        </Stack>
      </Center>
    </AppLayout>
  );
};

export default Home;
